public class Solution {
    public int threeSumClosest(int[] num, int target) {
        // Start typing your Java solution below
        // DO NOT write main() function
        int minsub = 200000000;
        Arrays.sort(num);
        for (int i = 0; i < num.length; i++)    {
            if (i > 0 && num[i] == num[i - 1])
                continue;
            for (int j = i + 1; j < num.length; j++)    {
                if (j > i + 1 && num[j] == num[j - 1])
                    continue;
                int k = biFindNearest(target - num[i] - num[j], num, j + 1, num.length - 1);
                if (Math.abs(k + num[i] + num[j] - target) < Math.abs(minsub))
                    minsub = k + num[i] + num[j] - target;
            }
        }
        return minsub + target;
    }
    
    public int biFindNearest(int t, int[] num, int s, int e) {
        int ss = s, ee = e;
        while (true)   {
            if (s > e)  {
                int ret = 200000000;
                if (s <= ee && Math.abs(num[s] - t) < ret)  {
                    ret = num[s];
                }
                if (e >= ss && Math.abs(num[e] - t) < ret)  {
                    ret = num[e];
                }
                return ret;
            }
            int m = (s + e) / 2;
            if (num[m] == t)    {
                return num[m];
            }
            else if (t < num[m])    {
                e = m - 1;
            }
            else 
                s = m + 1;
        }
    }
}